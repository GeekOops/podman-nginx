[Unit]
Description=nginx service as podman container
Wants=network-online.target
After=network-online.target
RequiresMountsFor=%t/containers

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=always
RestartSec=30
TimeoutStopSec=70
ExecStartPre=/bin/rm -f %t/%n.ctr-id
{% if nginx_auto_pull == true %}
ExecStartPre=/usr/bin/podman pull {{ nginx_container_image }}
{% endif %}
ExecStart=/usr/bin/podman run \
    --cidfile=%t/%n.ctr-id --cgroups=no-conmon --rm --sdnotify=conmon -d --replace -ti \
    --name {{ nginx_container_name }} \
    --hostname {{ nginx_container_name }} \
    --network {{ nginx_network }} \
{% if nginx_container_ip != "" %}
    --ip {{ nginx_container_ip }} \
{% endif %}
{% for publish in nginx_publish %}
    --publish {{ publish }} \
{% endfor %}
    -v {{ nginx_data_dir }}:/srv/www:z \
    -v {{ nginx_conf_dir }}:/etc/nginx:ro,Z \
{% if nginx_log_directory != "" %}
    -v {{nginx_log_directory}}:/var/log/nginx:z \
{% endif %}
{% if nginx_auto_update == true %}
    --label io.containers.autoupdate=image \
{% endif %}
{% if nginx_health_check == true %}
    --health-cmd='curl -fSs http://localhost' --health-start-period=1m \
{% endif %}
{% if nginx_mem_limit != "" %}
    --memory {{ nginx_mem_limit }} \
{% endif %}
    {{ nginx_container_image }}
ExecStop=/usr/bin/podman stop --ignore --cidfile=%t/%n.ctr-id
ExecStopPost=/usr/bin/podman rm -f --ignore --cidfile=%t/%n.ctr-id
Type=notify
NotifyAccess=all

[Install]
WantedBy=default.target
